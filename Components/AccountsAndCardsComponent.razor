@inject IDbContextFactory<FinancialOrganizerDbContext> dbContextFactory

<div class="table-container">
    <table>
        <thead>
            <tr class="table-title">
                <th colspan="2">Accounts and cards</th>
            </tr>
            <tr class="table-columns-names">
                <th>Categories</th>
                <th>Limit</th>
            </tr>
        </thead>
        <tbody>
            @if (paymentMethods is not null)
            {
                @foreach (var paymentMethod in paymentMethods)
                {
                    <tr>
                        <td>@paymentMethod.PaymentMethodIssuer - @paymentMethod.PaymentMethodType</td>
                        <td>R$ 500,00</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code {
    private List<PaymentMethods>? paymentMethods;

    protected override async Task OnInitializedAsync()
    {
        using (var context = dbContextFactory.CreateDbContext())
        {
            paymentMethods = await context.PaymentMethods.ToListAsync();
        }
    }
}